version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: graphdo_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
    volumes:
      - postgres_data:/var/lib/postgresql/data
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d graphdo_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        http_proxy: http://172.17.0.1:7890
        https_proxy: http://172.17.0.1:7890
    environment:
      - http_proxy=http://172.17.0.1:7890
      - https_proxy=http://172.17.0.1:7890
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - DB_URI=postgresql://postgres:12345678@postgres:5432/graphdo_db
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        http_proxy: http://172.17.0.1:7890
        https_proxy: http://172.17.0.1:7890
    environment:
      - http_proxy=http://172.17.0.1:7890
      - https_proxy=http://172.17.0.1:7890
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
